[{"G:\\chatapp\\client\\src\\index.js":"1","G:\\chatapp\\client\\src\\App.jsx":"2","G:\\chatapp\\client\\src\\components\\ContextProviders.jsx":"3","G:\\chatapp\\client\\src\\useToken.js":"4","G:\\chatapp\\client\\src\\useAuthenticateUser.js":"5","G:\\chatapp\\client\\src\\userContext.js":"6","G:\\chatapp\\client\\src\\useSocket.js":"7","G:\\chatapp\\client\\src\\components\\Login.jsx":"8","G:\\chatapp\\client\\src\\components\\Header.jsx":"9","G:\\chatapp\\client\\src\\components\\Home.jsx":"10","G:\\chatapp\\client\\src\\components\\Profile.jsx":"11","G:\\chatapp\\client\\src\\components\\ChatRoom.jsx":"12","G:\\chatapp\\client\\src\\components\\Register.jsx":"13","G:\\chatapp\\client\\src\\useFetch.js":"14","G:\\chatapp\\client\\src\\useUser.js":"15","G:\\chatapp\\client\\src\\components\\SearchUsers.jsx":"16","G:\\chatapp\\client\\src\\useUsers.js":"17","G:\\chatapp\\client\\src\\components\\Notifications.jsx":"18","G:\\chatapp\\client\\src\\chatContext.js":"19","G:\\chatapp\\client\\src\\components\\Messages.jsx":"20"},{"size":297,"mtime":1617116615796,"results":"21","hashOfConfig":"22"},{"size":4102,"mtime":1617213791189,"results":"23","hashOfConfig":"22"},{"size":301,"mtime":1617206651274,"results":"24","hashOfConfig":"22"},{"size":722,"mtime":1616333457577,"results":"25","hashOfConfig":"22"},{"size":1758,"mtime":1616509809262,"results":"26","hashOfConfig":"22"},{"size":1721,"mtime":1616950655681,"results":"27","hashOfConfig":"22"},{"size":575,"mtime":1617142414624,"results":"28","hashOfConfig":"22"},{"size":4755,"mtime":1616950653032,"results":"29","hashOfConfig":"22"},{"size":2501,"mtime":1617128834015,"results":"30","hashOfConfig":"22"},{"size":1470,"mtime":1616529097306,"results":"31","hashOfConfig":"22"},{"size":861,"mtime":1616950651448,"results":"32","hashOfConfig":"22"},{"size":5516,"mtime":1617215751223,"results":"33","hashOfConfig":"22"},{"size":8812,"mtime":1616333457573,"results":"34","hashOfConfig":"22"},{"size":709,"mtime":1616347092406,"results":"35","hashOfConfig":"22"},{"size":1523,"mtime":1616937514597,"results":"36","hashOfConfig":"22"},{"size":2463,"mtime":1616937576644,"results":"37","hashOfConfig":"22"},{"size":1551,"mtime":1616874118871,"results":"38","hashOfConfig":"22"},{"size":1128,"mtime":1617215361112,"results":"39","hashOfConfig":"22"},{"size":494,"mtime":1617132147238,"results":"40","hashOfConfig":"22"},{"size":1042,"mtime":1617211594736,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"xem499",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\chatapp\\client\\src\\index.js",[],["85","86"],"G:\\chatapp\\client\\src\\App.jsx",["87"],"G:\\chatapp\\client\\src\\components\\ContextProviders.jsx",[],"G:\\chatapp\\client\\src\\useToken.js",[],"G:\\chatapp\\client\\src\\useAuthenticateUser.js",[],["88","89"],"G:\\chatapp\\client\\src\\userContext.js",[],"G:\\chatapp\\client\\src\\useSocket.js",[],"G:\\chatapp\\client\\src\\components\\Login.jsx",[],"G:\\chatapp\\client\\src\\components\\Header.jsx",[],"G:\\chatapp\\client\\src\\components\\Home.jsx",[],"G:\\chatapp\\client\\src\\components\\Profile.jsx",[],"G:\\chatapp\\client\\src\\components\\ChatRoom.jsx",["90","91"],"G:\\chatapp\\client\\src\\components\\Register.jsx",["92"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport useFetch from \"../useFetch\";\r\nimport useToken from \"../useToken\";\r\nimport userContext from \"../userContext\";\r\n\r\nexport default function Register(props) {\r\n  // const { currentUser, setCurrentUser, setToken } = props;\r\n  const history = useHistory();\r\n\r\n  const { setResponse, error: serverError} = useFetch();\r\n  const { setToken } = useToken();\r\n  const {user, setUser} = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    // if current user exists, redirect to home page\r\n    if (user) history.push(\"/\");\r\n  }, [user, history]);\r\n\r\n  // form data states\r\n  const [fullname, setFullname] = useState(\"\");\r\n  const [fullnameErr, setFullnameErr] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameErr, setUsernameErr] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailErr, setEmailErr] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const [pwErr, setPwErr] = useState(\"\");\r\n  const [cpw, setCpw] = useState(\"\");\r\n  const [cpwErr, setCpwErr] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    let formData = {\r\n      fullname,\r\n      username,\r\n      email,\r\n      password: pw,\r\n    };\r\n\r\n    let url = `/register`;\r\n\r\n    let headers = new Headers();\r\n    headers.set(\"Accept\", \"application/json\");\r\n    headers.set(\"Content-Type\", \"application/json\");\r\n\r\n    let options = {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(formData),\r\n    };\r\n\r\n    // useFetch's callback\r\n    const completeRegisteration = ({ ok, data }) => {\r\n      if (ok) {\r\n        const { token, user: userData } = data;\r\n        setToken(token);\r\n        setUser(userData);\r\n      } else {\r\n        const { errors } = data;\r\n        const formatedErrors = errors.map((err) => [err.param, err.msg]);\r\n        updateErrors(formatedErrors);\r\n      }\r\n    };\r\n\r\n    setResponse(url, options, completeRegisteration);\r\n  };\r\n\r\n  const updateErrors = (errors) => {\r\n    errors.forEach((error) => {\r\n      const [param, msg] = error;\r\n\r\n      switch (param) {\r\n        case \"fullname\":\r\n          setFullnameErr(msg);\r\n          break;\r\n        case \"username\":\r\n          setUsernameErr(msg);\r\n          break;\r\n        case \"email\":\r\n          setEmailErr(msg);\r\n          break;\r\n        case \"password\":\r\n          setPwErr(msg);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  };\r\n\r\n  const inputSyle =\r\n    \"px-2 py-1 text-sm rounded-sm border border-indigo-300 bg-indigo-50 hover:bg-indigo-100 focus:bg-indigo-100 focus:text-black focus:outline-none\";\r\n  return (\r\n    <div className=\"h-screen flex flex-col justify-center items-center\">\r\n      <h1 className=\"text-4xl mb-10\">Register</h1>\r\n      <form className=\"w-full\">\r\n        <div className=\"my-2 flex flex-col w-1/2 md:w-1/3 m-auto\">\r\n          <label htmlFor=\"fullname\">full name</label>\r\n          <input\r\n            className={inputSyle}\r\n            type=\"text\"\r\n            id=\"fullname\"\r\n            name=\"fullname\"\r\n            placeholder=\"Ex: John Snow\"\r\n            onChange={(e) => {\r\n              setFullname(e.target.value);\r\n              // if no errors set fullnameErr to \"\"\r\n              if (e.target.value.length < 2 || e.target.value.length > 50) {\r\n                setFullnameErr(\r\n                  \"fullname shoule be at least 2 characters and not exceed 50 characters\"\r\n                );\r\n              } else {\r\n                setFullnameErr(\"\");\r\n              }\r\n            }}\r\n            required\r\n          />\r\n          <span className=\"text-sm text-red-700\">{fullnameErr}</span>\r\n        </div>\r\n        <div className=\"my-2 flex flex-col w-1/2 md:w-1/3 m-auto\">\r\n          <label htmlFor=\"username\">username</label>\r\n          <input\r\n            className={inputSyle}\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            placeholder=\"Ex: johnsnow432\"\r\n            onChange={(e) => {\r\n              const { value } = e.target;\r\n\r\n              setUsername(value);\r\n\r\n              // if no errors set usernameErr to \"\"\r\n              if (\r\n                value.includes(\" \") ||\r\n                !/^(?=[a-z_\\d]*[a-z])[a-z_\\d]{2,20}$/.test(value)\r\n              ) {\r\n                setUsernameErr(\r\n                  \"username must be 2-20 characters long, and contains letters and numbers only\"\r\n                );\r\n              } else {\r\n                setUsernameErr(\"\");\r\n              }\r\n            }}\r\n            required\r\n          />\r\n          <span className=\"text-sm text-red-700\">{usernameErr}</span>\r\n        </div>\r\n        <div className=\"my-2 flex flex-col w-1/2 md:w-1/3 m-auto\">\r\n          <label htmlFor=\"email\">email</label>\r\n          <input\r\n            className={inputSyle}\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Ex: john499@example.com\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n\r\n              if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(\r\n                  e.target.value\r\n                )\r\n              ) {\r\n                setEmailErr(\"Email is not valid\");\r\n              } else {\r\n                setEmailErr(\"\");\r\n              }\r\n            }}\r\n            required\r\n          />\r\n          <span className=\"text-sm text-red-700\">{emailErr}</span>\r\n        </div>\r\n        <div className=\"my-2 flex flex-col w-1/2 md:w-1/3 m-auto\">\r\n          <label htmlFor=\"password\">password</label>\r\n          <input\r\n            className={inputSyle}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            onChange={(e) => {\r\n              setPw(e.target.value);\r\n\r\n              if (e.target.value.length < 8) {\r\n                setPwErr(\"password should contains at least 8 characters\");\r\n              } else {\r\n                setPwErr(\"\");\r\n              }\r\n\r\n              // check if cpw existed then validate if true\r\n              if (cpw.length) {\r\n                if (e.target.value !== cpw) {\r\n                  setCpwErr(\"password doesn't match\");\r\n                } else {\r\n                  setCpwErr(\"\");\r\n                }\r\n              }\r\n            }}\r\n            autoComplete=\"new-password\"\r\n            required\r\n          />\r\n          <span className=\"text-sm text-red-700\">{pwErr}</span>\r\n        </div>\r\n        <div className=\"my-2 flex flex-col w-1/2 md:w-1/3 m-auto\">\r\n          <label htmlFor=\"cpassword\">confirm password</label>\r\n          <input\r\n            className={inputSyle}\r\n            type=\"password\"\r\n            id=\"cpassword\"\r\n            name=\"cpassword\"\r\n            onChange={(e) => {\r\n              setCpw(e.target.value);\r\n\r\n              if (e.target.value !== pw) {\r\n                setCpwErr(\"password doesn't match\");\r\n              } else {\r\n                setCpwErr(\"\");\r\n              }\r\n            }}\r\n            autoComplete=\"new-password\"\r\n            required\r\n          />\r\n          <span className=\"text-sm text-red-700\">{cpwErr}</span>\r\n        </div>\r\n        <div className=\"my-2 flex flex-col w-40 m-auto\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            className=\"p-2 rounded-sm border border-indigo-300 bg-indigo-50 hover:bg-indigo-100 disabled:bg-gray-100 disabled:text-gray-500\"\r\n            disabled={\r\n              !fullname ||\r\n              !username ||\r\n              !email ||\r\n              !pw ||\r\n              !cpw ||\r\n              fullnameErr ||\r\n              usernameErr ||\r\n              emailErr ||\r\n              pwErr ||\r\n              cpwErr\r\n                ? true\r\n                : false\r\n            }\r\n            onClick={async (e) => {\r\n              // form validation\r\n              e.preventDefault();\r\n\r\n              let isFullnameValid = !fullnameErr,\r\n                isUsernameValid = !usernameErr,\r\n                isEmailValid = !emailErr && email.length,\r\n                isPwValid = !pwErr && pw.length >= 8,\r\n                isConfirmed = !cpwErr;\r\n\r\n              let isValidationPassed =\r\n                isFullnameValid &&\r\n                isUsernameValid &&\r\n                isEmailValid &&\r\n                isPwValid &&\r\n                isConfirmed;\r\n\r\n              if (isValidationPassed) {\r\n                handleSubmit();\r\n              } else {\r\n                setCpw(\"something is wrong\")\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        <p className=\"lowercase text-center\">\r\n          have an account?{\" \"}\r\n          <Link to=\"/login\" className=\"text-indigo-500 hover:text-indigo-900\">\r\n            login\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","G:\\chatapp\\client\\src\\useFetch.js",[],"G:\\chatapp\\client\\src\\useUser.js",[],"G:\\chatapp\\client\\src\\components\\SearchUsers.jsx",[],"G:\\chatapp\\client\\src\\useUsers.js",[],"G:\\chatapp\\client\\src\\components\\Notifications.jsx",["93"],"G:\\chatapp\\client\\src\\chatContext.js",[],"G:\\chatapp\\client\\src\\components\\Messages.jsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":77,"column":6,"nodeType":"100","endLine":77,"endColumn":20,"suggestions":"101"},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},{"ruleId":"98","severity":1,"message":"104","line":90,"column":6,"nodeType":"100","endLine":90,"endColumn":12,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"106","line":108,"column":6,"nodeType":"100","endLine":108,"endColumn":10,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":11,"column":31,"nodeType":"110","messageId":"111","endLine":11,"endColumn":42},{"ruleId":"98","severity":1,"message":"112","line":14,"column":6,"nodeType":"100","endLine":14,"endColumn":29,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isFetchedUserContext'. Either include it or remove the dependency array.","ArrayExpression",["116"],["114"],["115"],"React Hook useEffect has missing dependencies: 'history' and 'isFetched'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'fetchRoomChat'. Either include it or remove the dependency array.",["118"],"no-unused-vars","'serverError' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setNotifications'. Either include it or remove the dependency array. If 'setNotifications' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [isFetchedUserContext, socket, user]",{"range":"128","text":"129"},"Update the dependencies array to be: [history, isFetched, user]",{"range":"130","text":"131"},"Update the dependencies array to be: [fetchRoomChat, id]",{"range":"132","text":"133"},"Update the dependencies array to be: [notifications, setNotifications, socket]",{"range":"134","text":"135"},[2775,2789],"[isFetchedUserContext, socket, user]",[2947,2953],"[history, isFetched, user]",[3307,3311],"[fetchRoomChat, id]",[306,329],"[notifications, setNotifications, socket]"]